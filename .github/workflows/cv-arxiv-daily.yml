# This is a basic workflow to help you get started with Actions

name: Run Arxiv Papers Daily

# Controls when the workflow will run
on:
 # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  schedule:
    - cron:  "0 0/12 * * *"  #'*/60 * * * *'
# Triggers the workflow on push or pull request events but only for the main branch
#   push:
#     branches:
#     - main
env:
  GITHUB_USER_NAME: iszhanjiawei
  GITHUB_USER_EMAIL: zhanjiawei@stu.xju.edu.cn
  # 微信推送环境变量
  WECHAT_WEBHOOK_URL: ${{ secrets.WECHAT_WEBHOOK_URL }}
  SERVERCHAN_KEY: ${{ secrets.SERVERCHAN_KEY }}
  
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: update
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # 添加权限配置，允许推送代码
    permissions:
      contents: write  # 关键：允许修改仓库内容（包括推送）
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Set up Python Env
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          #architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install arxiv
          pip install requests
          pip install pyyaml
          
      - name: Configure WeChat Push
        run: |
          # 动态更新配置文件中的微信推送设置
          if [ ! -z "$WECHAT_WEBHOOK_URL" ] || [ ! -z "$SERVERCHAN_KEY" ]; then
            echo "配置微信推送功能..."
            # 导出环境变量供Python脚本使用
            export WECHAT_WEBHOOK_URL="$WECHAT_WEBHOOK_URL"
            export SERVERCHAN_KEY="$SERVERCHAN_KEY"
            # 创建配置脚本
            cat > wechat_config.py << 'SCRIPT_END'
import yaml
import os

# 读取配置文件
with open('config.yaml', 'r', encoding='utf-8') as f:
    config = yaml.load(f, Loader=yaml.FullLoader)

# 更新微信推送配置
if 'wechat_push' not in config:
    config['wechat_push'] = {}

# 检查环境变量并更新配置
webhook_url = os.environ.get('WECHAT_WEBHOOK_URL', '')
serverchan_key = os.environ.get('SERVERCHAN_KEY', '')

if webhook_url or serverchan_key:
    config['wechat_push']['enabled'] = True
    if webhook_url:
        config['wechat_push']['method'] = 'webhook'
        config['wechat_push']['webhook_url'] = webhook_url
    elif serverchan_key:
        config['wechat_push']['method'] = 'serverchan'
        config['wechat_push']['serverchan_key'] = serverchan_key
    
    # 设置默认值
    config['wechat_push'].setdefault('max_papers_per_topic', 3)
    config['wechat_push'].setdefault('push_empty_updates', False)
    
    print('微信推送已启用')
else:
    config['wechat_push']['enabled'] = False
    print('微信推送未配置，保持禁用状态')

# 写回配置文件
with open('config.yaml', 'w', encoding='utf-8') as f:
    yaml.dump(config, f, default_flow_style=False, allow_unicode=True)
SCRIPT_END
            # 执行配置脚本
            python wechat_config.py
            # 清理临时文件
            rm wechat_config.py
          else
            echo "未配置微信推送环境变量，跳过微信推送配置"
          fi
          
      - name: Run daily arxiv 
        run: |
          python daily_arxiv.py
          
      - name: Push new cv-arxiv-daily.md
        uses: github-actions-x/commit@v2.9
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Github Action Automatic Update Flow Matching Arxiv Papers"
          files: README.md docs/tts-arxiv-daily.json
          rebase: 'true'
          name: ${{ env.GITHUB_USER_NAME }}
          email: ${{ env.GITHUB_USER_EMAIL }}
